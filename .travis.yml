# make use of vm's 
sudo: 'required'

name: Build Rucio Cronjobs docker image

# have the docker service set up (we'll
# update it later)
services:
  - 'docker'

# set enviromental variables: version, url, etc
env:
  global:

# prepare the machine before any code
# installation scripts
before_install:
  - './.travis/main.sh'

# first execute the test suite.
# after the test execution is done and didn't
# fail, build the images (if this step fails
# the whole Travis build is considered a failure).

jobs:
  include:
    - stage: test rse
      env:
        - REPO_NAME=rucio-sync-rses
      script:
        - 'make test_rses'
        - export $REPO_NAME="rucio-sync-rses"
        - echo $IMAGE $REPO_NAME $TRAVIS_BRANCH
        - docker push $IMAGE/$REPO_NAME:$TRAVIS_BRANCH
    - stage: test client
      env:
        - REPO_NAME=rucio-sync-clients
      script:
        - 'make test_clients'
        - docker push $IMAGE/$REPO_NAME:$TRAVIS_BRANCH
    - stage: test fts 
      env:
        - REPO_NAME=fts-renew
      script:
        - 'make test_fts'
        - docker push $IMAGE/$REPO_NAME:$TRAVIS_BRANCH
    - stage: test hermes
      env:
        - REPO_NAME=add-hermes-2
      script:
        - 'make test_hermes2'
        - docker push $IMAGE/$REPO_NAME:$TRAVIS_BRANCH
    - stage: test admin
      env:
        - REPO_NAME=rucio-admin
      script:
        - 'make test_admin'
       
        - docker push $IMAGE/$REPO_NAME:$TRAVIS_BRANCH
    - stage: test monitoring 
      env:
        - REPO_NAME=rucio-admin-monitoring
      script:
        - 'make test_monitoring'
        - docker push $IMAGE/$REPO_NAME:$TRAVIS_BRANCH

# only execute the following instructions in
# the case of a success (failing at this point
# won't mark the build as a failure).
# To have `DOCKER_USERNAME` and `DOCKER_PASSWORD`
# filled you need to either use `travis`' cli 
# and then `travis set ..` or go to the travis
# page of your repository and then change the 
# environment in the settings pannel.
after_success:
  - if [[ "$TRAVIS_BRANCH" == "master" ]]; then
      docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD ;
      make push-image ;
    fi

# don't notify me when things fail
notifications:
  email: false
